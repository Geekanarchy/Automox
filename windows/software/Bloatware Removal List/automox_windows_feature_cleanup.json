{
    "name": "Windows Feature Cleanup & OneDrive Removal",
    "description": "Removes unnecessary Windows built-in apps and OneDrive, with logging and error handling.",
    "policy_type": "worklet",
    "platform": "windows",
    "eval_code": "# Windows Feature Cleanup - Evaluation Script\n# Checks for presence of unwanted built-in apps and OneDrive\n# Logs actions and outputs results for Automox evaluation\n\n# Define log location\n$logPath = \"C:\\ProgramData\\Automox\\Logs\"\n$logFile = \"$logPath\\FeatureCleanup.log\"\n\nif (-not (Test-Path $logPath)) {\n    New-Item -Path $logPath -ItemType Directory -Force | Out-Null\n}\nStart-Transcript -Path $logFile -Append\n\ntry {\n    $appsToCheck = @(\n        \"Microsoft.XboxGamingOverlay\",\n        \"Microsoft.XboxGameOverlay\",\n        \"Microsoft.Xbox.TCUI\",\n        \"Microsoft.XboxSpeechToTextOverlay\",\n        \"Microsoft.XboxIdentityProvider\",\n        \"Microsoft.GamingApp\",\n        \"Microsoft.XboxApp\",\n        \"Microsoft.People\",\n        \"Microsoft.SkypeApp\",\n        \"Microsoft.YourPhone\",\n        \"Microsoft.CommsPhone\",\n        \"Microsoft.Messaging\",\n        \"Microsoft.ZuneMusic\",\n        \"Microsoft.ZuneVideo\",\n        \"Microsoft.MicrosoftSolitaireCollection\",\n        \"Microsoft.BingNews\",\n        \"Microsoft.BingWeather\",\n        \"Microsoft.BingSports\",\n        \"Microsoft.BingFinance\",\n        \"Microsoft.MixedReality.Portal\",\n        \"Microsoft.3DViewer\",\n        \"Microsoft.GetHelp\",\n        \"Microsoft.Getstarted\",\n        \"Microsoft.WindowsFeedbackHub\",\n        \"Microsoft.MicrosoftStickyNotes\",\n        \"Microsoft.MicrosoftOfficeHub\",\n        \"Microsoft.Paint3D\",\n        \"Microsoft.ScreenSketch\",\n        \"Microsoft.Advertising.Xaml\",\n        \"Microsoft.Todos\"\n    )\n\n    $installedApps = Get-AppxPackage | Select-Object -ExpandProperty Name\n    $foundApps = $appsToCheck | Where-Object { $_ -in $installedApps }\n\n    $oneDrivePath = \"$env:SYSTEMROOT\\System32\\OneDriveSetup.exe\"\n    $oneDriveInstalled = Test-Path $oneDrivePath\n\n    if ($foundApps.Count -gt 0 -or $oneDriveInstalled) {\n        Write-Output \"Unwanted apps or OneDrive detected: $($foundApps -join ', ')\"\n        Stop-Transcript\n        exit 1\n    } else {\n        Write-Output \"No unwanted apps found. System clean.\"\n        Stop-Transcript\n        exit 0\n    }\n}\ncatch {\n    Write-Error \"Evaluation failed: $_\"\n    Stop-Transcript\n    exit 1\n}",
    "remed_code": "# Windows Feature Cleanup - Remediation Script\n# Removes built-in apps and OneDrive, including provisioned packages and user profile leftovers\n# Logs all actions and errors for auditing purposes\n\n$logPath = \"C:\\ProgramData\\Automox\\Logs\"\n$logFile = \"$logPath\\FeatureCleanup.log\"\n\nif (-not (Test-Path $logPath)) {\n    New-Item -Path $logPath -ItemType Directory -Force | Out-Null\n}\nStart-Transcript -Path $logFile -Append\n\ntry {\n    $appsToRemove = @(\n        \"Microsoft.XboxGamingOverlay\",\n        \"Microsoft.XboxGameOverlay\",\n        \"Microsoft.Xbox.TCUI\",\n        \"Microsoft.XboxSpeechToTextOverlay\",\n        \"Microsoft.XboxIdentityProvider\",\n        \"Microsoft.GamingApp\",\n        \"Microsoft.XboxApp\",\n        \"Microsoft.People\",\n        \"Microsoft.SkypeApp\",\n        \"Microsoft.YourPhone\",\n        \"Microsoft.CommsPhone\",\n        \"Microsoft.Messaging\",\n        \"Microsoft.ZuneMusic\",\n        \"Microsoft.ZuneVideo\",\n        \"Microsoft.MicrosoftSolitaireCollection\",\n        \"Microsoft.BingNews\",\n        \"Microsoft.BingWeather\",\n        \"Microsoft.BingSports\",\n        \"Microsoft.BingFinance\",\n        \"Microsoft.MixedReality.Portal\",\n        \"Microsoft.3DViewer\",\n        \"Microsoft.GetHelp\",\n        \"Microsoft.Getstarted\",\n        \"Microsoft.WindowsFeedbackHub\",\n        \"Microsoft.MicrosoftStickyNotes\",\n        \"Microsoft.MicrosoftOfficeHub\",\n        \"Microsoft.Paint3D\",\n        \"Microsoft.ScreenSketch\",\n        \"Microsoft.Advertising.Xaml\",\n        \"Microsoft.Todos\"\n    )\n\n    foreach ($app in $appsToRemove) {\n        try {\n            Write-Output \"Attempting to remove app: $app\"\n            Get-AppxPackage -Name $app -AllUsers | Remove-AppxPackage -AllUsers -ErrorAction SilentlyContinue\n            Get-AppxProvisionedPackage -Online | Where-Object DisplayName -EQ $app | Remove-AppxProvisionedPackage -Online -ErrorAction SilentlyContinue\n        } catch {\n            Write-Warning \"Error removing $app: $_\"\n        }\n    }\n\n    $oneDriveSetup = \"$env:SYSTEMROOT\\System32\\OneDriveSetup.exe\"\n    if (Test-Path $oneDriveSetup) {\n        try {\n            Write-Output \"Uninstalling OneDrive...\"\n            Start-Process $oneDriveSetup -ArgumentList \"/uninstall\" -NoNewWindow -Wait\n        } catch {\n            Write-Warning \"Failed to uninstall OneDrive: $_\"\n        }\n    }\n\n    Get-ChildItem \"C:\\Users\" -Directory | ForEach-Object {\n        $userProfile = $_.FullName\n        $oneDriveFolders = @(\"$userProfile\\OneDrive\", \"$userProfile\\AppData\\Local\\Microsoft\\OneDrive\")\n        foreach ($folder in $oneDriveFolders) {\n            if (Test-Path $folder) {\n                try {\n                    Write-Output \"Removing OneDrive folder: $folder\"\n                    Remove-Item -Recurse -Force -Path $folder -ErrorAction SilentlyContinue\n                } catch {\n                    Write-Warning \"Failed to remove OneDrive folder $folder: $_\"\n                }\n            }\n        }\n    }\n\n    Write-Output \"Feature cleanup and OneDrive removal completed.\"\n    Stop-Transcript\n    exit 0\n}\ncatch {\n    Write-Error \"Remediation failed: $_\"\n    Stop-Transcript\n    exit 1\n}",
    "timeout": 900
}